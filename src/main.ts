import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import helmet from 'helmet';
import { AppModule } from './app.module';
import { WinstonModule } from 'nest-winston';
import { winstonConfig } from './config/logger.config';
import { PrometheusInterceptor } from './common/interceptors/prometheus.interceptor';

async function bootstrap() {
  const app = await NestFactory.create(AppModule, {
    logger: WinstonModule.createLogger(winstonConfig),
  });

  const logger = new Logger('Bootstrap');

  app.use(helmet());

  const config = new DocumentBuilder()
    .setTitle('Brain Agriculture API')
    .setDescription(
      'Esta API foi desenvolvida para gerenciamento de dados relacionados a propriedades rurais, produtores, colheitas (harvests), culturas (crops) e fazendas (farms), permitindo uma integra√ß√£o eficiente entre sistemas agr√≠colas.\n\n' +
        'A documenta√ß√£o abaixo fornece todos os endpoints dispon√≠veis, seus par√¢metros, respostas esperadas e requisitos de autentica√ß√£o quando aplic√°vel.\n\n' +
        'üîí Autentica√ß√£o\n' +
        'Alguns endpoints exigem autentica√ß√£o via JWT. Para utiliz√°-los:\n' +
        '- Clique em "Authorize" no canto superior direito.\n' +
        '- Insira o token JWT no formato: Bearer <token>.\n\n' +
        'üì¶ Recursos principais da API:\n' +
        '- Producers: cadastro e gerenciamento de produtores rurais.\n' +
        '- Farms: associadas aos produtores, representam as propriedades rurais.\n' +
        '- Crops: culturas cultivadas nas fazendas.\n' +
        '- Harvests: hist√≥rico de colheitas vinculadas √†s culturas e fazendas.\n' +
        '- Users/Auth: gerenciamento de usu√°rios e autentica√ß√£o.\n\n' +
        '‚úÖ Health Check:\n' +
        'O endpoint /health pode ser utilizado para verificar a disponibilidade da aplica√ß√£o. Ele n√£o requer autentica√ß√£o.\n\n' +
        'üìò Como usar:\n' +
        'Voc√™ pode clicar em "Try it out" para testar os endpoints diretamente pela interface. Certifique-se de preencher os par√¢metros necess√°rios e estar autenticado quando requerido.\n\n' +
        'Para d√∫vidas t√©cnicas ou integra√ß√£o, consulte os exemplos de payloads nas se√ß√µes de cada rota.',
    )
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  app.useGlobalInterceptors(new PrometheusInterceptor());
  await app.listen(3000);
  logger.log('Aplica√ß√£o iniciada na porta 3000');
}
bootstrap();
